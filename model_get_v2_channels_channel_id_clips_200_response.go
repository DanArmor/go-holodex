/*
Holodex/HoloAPI V2

Holodex Public API. Successor to the HoloAPI v1

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package holodex

import (
	"encoding/json"
	"fmt"
)

// GetV2ChannelsChannelIdClips200Response - struct for GetV2ChannelsChannelIdClips200Response
type GetV2ChannelsChannelIdClips200Response struct {
	GetV2ChannelsChannelIdClips200ResponseOneOf *GetV2ChannelsChannelIdClips200ResponseOneOf
	ArrayOfVideoFull *[]VideoFull
}

// GetV2ChannelsChannelIdClips200ResponseOneOfAsGetV2ChannelsChannelIdClips200Response is a convenience function that returns GetV2ChannelsChannelIdClips200ResponseOneOf wrapped in GetV2ChannelsChannelIdClips200Response
func GetV2ChannelsChannelIdClips200ResponseOneOfAsGetV2ChannelsChannelIdClips200Response(v *GetV2ChannelsChannelIdClips200ResponseOneOf) GetV2ChannelsChannelIdClips200Response {
	return GetV2ChannelsChannelIdClips200Response{
		GetV2ChannelsChannelIdClips200ResponseOneOf: v,
	}
}

// []VideoFullAsGetV2ChannelsChannelIdClips200Response is a convenience function that returns []VideoFull wrapped in GetV2ChannelsChannelIdClips200Response
func ArrayOfVideoFullAsGetV2ChannelsChannelIdClips200Response(v *[]VideoFull) GetV2ChannelsChannelIdClips200Response {
	return GetV2ChannelsChannelIdClips200Response{
		ArrayOfVideoFull: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetV2ChannelsChannelIdClips200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetV2ChannelsChannelIdClips200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.GetV2ChannelsChannelIdClips200ResponseOneOf)
	if err == nil {
		jsonGetV2ChannelsChannelIdClips200ResponseOneOf, _ := json.Marshal(dst.GetV2ChannelsChannelIdClips200ResponseOneOf)
		if string(jsonGetV2ChannelsChannelIdClips200ResponseOneOf) == "{}" { // empty struct
			dst.GetV2ChannelsChannelIdClips200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.GetV2ChannelsChannelIdClips200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfVideoFull
	err = newStrictDecoder(data).Decode(&dst.ArrayOfVideoFull)
	if err == nil {
		jsonArrayOfVideoFull, _ := json.Marshal(dst.ArrayOfVideoFull)
		if string(jsonArrayOfVideoFull) == "{}" { // empty struct
			dst.ArrayOfVideoFull = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfVideoFull = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetV2ChannelsChannelIdClips200ResponseOneOf = nil
		dst.ArrayOfVideoFull = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(GetV2ChannelsChannelIdClips200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(GetV2ChannelsChannelIdClips200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetV2ChannelsChannelIdClips200Response) MarshalJSON() ([]byte, error) {
	if src.GetV2ChannelsChannelIdClips200ResponseOneOf != nil {
		return json.Marshal(&src.GetV2ChannelsChannelIdClips200ResponseOneOf)
	}

	if src.ArrayOfVideoFull != nil {
		return json.Marshal(&src.ArrayOfVideoFull)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetV2ChannelsChannelIdClips200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.GetV2ChannelsChannelIdClips200ResponseOneOf != nil {
		return obj.GetV2ChannelsChannelIdClips200ResponseOneOf
	}

	if obj.ArrayOfVideoFull != nil {
		return obj.ArrayOfVideoFull
	}

	// all schemas are nil
	return nil
}

type NullableGetV2ChannelsChannelIdClips200Response struct {
	value *GetV2ChannelsChannelIdClips200Response
	isSet bool
}

func (v NullableGetV2ChannelsChannelIdClips200Response) Get() *GetV2ChannelsChannelIdClips200Response {
	return v.value
}

func (v *NullableGetV2ChannelsChannelIdClips200Response) Set(val *GetV2ChannelsChannelIdClips200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetV2ChannelsChannelIdClips200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetV2ChannelsChannelIdClips200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetV2ChannelsChannelIdClips200Response(val *GetV2ChannelsChannelIdClips200Response) *NullableGetV2ChannelsChannelIdClips200Response {
	return &NullableGetV2ChannelsChannelIdClips200Response{value: val, isSet: true}
}

func (v NullableGetV2ChannelsChannelIdClips200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetV2ChannelsChannelIdClips200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


