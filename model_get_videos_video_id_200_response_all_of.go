/*
Holodex/HoloAPI V2

Holodex Public API. Successor to the HoloAPI v1

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package holodex

import (
	"encoding/json"
)

// GetVideosVideoId200ResponseAllOf struct for GetVideosVideoId200ResponseAllOf
type GetVideosVideoId200ResponseAllOf struct {
	// Comments are only returned if c === '1'
	Comments []Comment `json:"comments,omitempty"`
	Recommendations []Video `json:"recommendations,omitempty"`
}

// NewGetVideosVideoId200ResponseAllOf instantiates a new GetVideosVideoId200ResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetVideosVideoId200ResponseAllOf() *GetVideosVideoId200ResponseAllOf {
	this := GetVideosVideoId200ResponseAllOf{}
	return &this
}

// NewGetVideosVideoId200ResponseAllOfWithDefaults instantiates a new GetVideosVideoId200ResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetVideosVideoId200ResponseAllOfWithDefaults() *GetVideosVideoId200ResponseAllOf {
	this := GetVideosVideoId200ResponseAllOf{}
	return &this
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *GetVideosVideoId200ResponseAllOf) GetComments() []Comment {
	if o == nil || o.Comments == nil {
		var ret []Comment
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVideosVideoId200ResponseAllOf) GetCommentsOk() ([]Comment, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *GetVideosVideoId200ResponseAllOf) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given []Comment and assigns it to the Comments field.
func (o *GetVideosVideoId200ResponseAllOf) SetComments(v []Comment) {
	o.Comments = v
}

// GetRecommendations returns the Recommendations field value if set, zero value otherwise.
func (o *GetVideosVideoId200ResponseAllOf) GetRecommendations() []Video {
	if o == nil || o.Recommendations == nil {
		var ret []Video
		return ret
	}
	return o.Recommendations
}

// GetRecommendationsOk returns a tuple with the Recommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetVideosVideoId200ResponseAllOf) GetRecommendationsOk() ([]Video, bool) {
	if o == nil || o.Recommendations == nil {
		return nil, false
	}
	return o.Recommendations, true
}

// HasRecommendations returns a boolean if a field has been set.
func (o *GetVideosVideoId200ResponseAllOf) HasRecommendations() bool {
	if o != nil && o.Recommendations != nil {
		return true
	}

	return false
}

// SetRecommendations gets a reference to the given []Video and assigns it to the Recommendations field.
func (o *GetVideosVideoId200ResponseAllOf) SetRecommendations(v []Video) {
	o.Recommendations = v
}

func (o GetVideosVideoId200ResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Recommendations != nil {
		toSerialize["recommendations"] = o.Recommendations
	}
	return json.Marshal(toSerialize)
}

type NullableGetVideosVideoId200ResponseAllOf struct {
	value *GetVideosVideoId200ResponseAllOf
	isSet bool
}

func (v NullableGetVideosVideoId200ResponseAllOf) Get() *GetVideosVideoId200ResponseAllOf {
	return v.value
}

func (v *NullableGetVideosVideoId200ResponseAllOf) Set(val *GetVideosVideoId200ResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetVideosVideoId200ResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetVideosVideoId200ResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetVideosVideoId200ResponseAllOf(val *GetVideosVideoId200ResponseAllOf) *NullableGetVideosVideoId200ResponseAllOf {
	return &NullableGetVideosVideoId200ResponseAllOf{value: val, isSet: true}
}

func (v NullableGetVideosVideoId200ResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetVideosVideoId200ResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


