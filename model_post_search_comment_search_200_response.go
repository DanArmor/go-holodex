/*
Holodex/HoloAPI V2

Holodex Public API. Successor to the HoloAPI v1

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package holodex

import (
	"encoding/json"
	"fmt"
)

// PostSearchCommentSearch200Response - struct for PostSearchCommentSearch200Response
type PostSearchCommentSearch200Response struct {
	PostSearchCommentSearch200ResponseOneOf *PostSearchCommentSearch200ResponseOneOf
	ArrayOfPostSearchCommentSearch200ResponseOneOfInner *[]PostSearchCommentSearch200ResponseOneOfInner
}

// PostSearchCommentSearch200ResponseOneOfAsPostSearchCommentSearch200Response is a convenience function that returns PostSearchCommentSearch200ResponseOneOf wrapped in PostSearchCommentSearch200Response
func PostSearchCommentSearch200ResponseOneOfAsPostSearchCommentSearch200Response(v *PostSearchCommentSearch200ResponseOneOf) PostSearchCommentSearch200Response {
	return PostSearchCommentSearch200Response{
		PostSearchCommentSearch200ResponseOneOf: v,
	}
}

// []PostSearchCommentSearch200ResponseOneOfInnerAsPostSearchCommentSearch200Response is a convenience function that returns []PostSearchCommentSearch200ResponseOneOfInner wrapped in PostSearchCommentSearch200Response
func ArrayOfPostSearchCommentSearch200ResponseOneOfInnerAsPostSearchCommentSearch200Response(v *[]PostSearchCommentSearch200ResponseOneOfInner) PostSearchCommentSearch200Response {
	return PostSearchCommentSearch200Response{
		ArrayOfPostSearchCommentSearch200ResponseOneOfInner: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *PostSearchCommentSearch200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into PostSearchCommentSearch200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.PostSearchCommentSearch200ResponseOneOf)
	if err == nil {
		jsonPostSearchCommentSearch200ResponseOneOf, _ := json.Marshal(dst.PostSearchCommentSearch200ResponseOneOf)
		if string(jsonPostSearchCommentSearch200ResponseOneOf) == "{}" { // empty struct
			dst.PostSearchCommentSearch200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.PostSearchCommentSearch200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfPostSearchCommentSearch200ResponseOneOfInner
	err = newStrictDecoder(data).Decode(&dst.ArrayOfPostSearchCommentSearch200ResponseOneOfInner)
	if err == nil {
		jsonArrayOfPostSearchCommentSearch200ResponseOneOfInner, _ := json.Marshal(dst.ArrayOfPostSearchCommentSearch200ResponseOneOfInner)
		if string(jsonArrayOfPostSearchCommentSearch200ResponseOneOfInner) == "{}" { // empty struct
			dst.ArrayOfPostSearchCommentSearch200ResponseOneOfInner = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfPostSearchCommentSearch200ResponseOneOfInner = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PostSearchCommentSearch200ResponseOneOf = nil
		dst.ArrayOfPostSearchCommentSearch200ResponseOneOfInner = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(PostSearchCommentSearch200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(PostSearchCommentSearch200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src PostSearchCommentSearch200Response) MarshalJSON() ([]byte, error) {
	if src.PostSearchCommentSearch200ResponseOneOf != nil {
		return json.Marshal(&src.PostSearchCommentSearch200ResponseOneOf)
	}

	if src.ArrayOfPostSearchCommentSearch200ResponseOneOfInner != nil {
		return json.Marshal(&src.ArrayOfPostSearchCommentSearch200ResponseOneOfInner)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *PostSearchCommentSearch200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PostSearchCommentSearch200ResponseOneOf != nil {
		return obj.PostSearchCommentSearch200ResponseOneOf
	}

	if obj.ArrayOfPostSearchCommentSearch200ResponseOneOfInner != nil {
		return obj.ArrayOfPostSearchCommentSearch200ResponseOneOfInner
	}

	// all schemas are nil
	return nil
}

type NullablePostSearchCommentSearch200Response struct {
	value *PostSearchCommentSearch200Response
	isSet bool
}

func (v NullablePostSearchCommentSearch200Response) Get() *PostSearchCommentSearch200Response {
	return v.value
}

func (v *NullablePostSearchCommentSearch200Response) Set(val *PostSearchCommentSearch200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostSearchCommentSearch200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostSearchCommentSearch200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostSearchCommentSearch200Response(val *PostSearchCommentSearch200Response) *NullablePostSearchCommentSearch200Response {
	return &NullablePostSearchCommentSearch200Response{value: val, isSet: true}
}

func (v NullablePostSearchCommentSearch200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostSearchCommentSearch200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


