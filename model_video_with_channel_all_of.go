/*
Holodex/HoloAPI V2

Holodex Public API. Successor to the HoloAPI v1

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package holodex

import (
	"encoding/json"
)

// VideoWithChannelAllOf struct for VideoWithChannelAllOf
type VideoWithChannelAllOf struct {
	Channel *ChannelMin `json:"channel,omitempty"`
}

// NewVideoWithChannelAllOf instantiates a new VideoWithChannelAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVideoWithChannelAllOf() *VideoWithChannelAllOf {
	this := VideoWithChannelAllOf{}
	return &this
}

// NewVideoWithChannelAllOfWithDefaults instantiates a new VideoWithChannelAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVideoWithChannelAllOfWithDefaults() *VideoWithChannelAllOf {
	this := VideoWithChannelAllOf{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *VideoWithChannelAllOf) GetChannel() ChannelMin {
	if o == nil || o.Channel == nil {
		var ret ChannelMin
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VideoWithChannelAllOf) GetChannelOk() (*ChannelMin, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *VideoWithChannelAllOf) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given ChannelMin and assigns it to the Channel field.
func (o *VideoWithChannelAllOf) SetChannel(v ChannelMin) {
	o.Channel = &v
}

func (o VideoWithChannelAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	return json.Marshal(toSerialize)
}

type NullableVideoWithChannelAllOf struct {
	value *VideoWithChannelAllOf
	isSet bool
}

func (v NullableVideoWithChannelAllOf) Get() *VideoWithChannelAllOf {
	return v.value
}

func (v *NullableVideoWithChannelAllOf) Set(val *VideoWithChannelAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVideoWithChannelAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVideoWithChannelAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVideoWithChannelAllOf(val *VideoWithChannelAllOf) *NullableVideoWithChannelAllOf {
	return &NullableVideoWithChannelAllOf{value: val, isSet: true}
}

func (v NullableVideoWithChannelAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVideoWithChannelAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


