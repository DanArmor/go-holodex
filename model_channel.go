/*
Holodex/HoloAPI V2

Holodex Public API. Successor to the HoloAPI v1

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package holodex

import (
	"encoding/json"
	"time"
)

// Channel struct for Channel
type Channel struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	EnglishName NullableString `json:"english_name,omitempty"`
	Type *string `json:"type,omitempty"`
	Org NullableString `json:"org,omitempty"`
	Suborg NullableString `json:"suborg,omitempty"`
	Photo NullableString `json:"photo,omitempty"`
	Banner NullableString `json:"banner,omitempty"`
	Twitter NullableString `json:"twitter,omitempty"`
	VideoCount NullableString `json:"video_count,omitempty"`
	SubscriberCount NullableString `json:"subscriber_count,omitempty"`
	ViewCount NullableString `json:"view_count,omitempty"`
	ClipCount NullableString `json:"clip_count,omitempty"`
	Lang NullableString `json:"lang,omitempty"`
	PublishedAt *time.Time `json:"published_at,omitempty"`
	Inactive *bool `json:"inactive,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewChannel instantiates a new Channel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannel() *Channel {
	this := Channel{}
	return &this
}

// NewChannelWithDefaults instantiates a new Channel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelWithDefaults() *Channel {
	this := Channel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Channel) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Channel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Channel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Channel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Channel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Channel) SetName(v string) {
	o.Name = &v
}

// GetEnglishName returns the EnglishName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetEnglishName() string {
	if o == nil || o.EnglishName.Get() == nil {
		var ret string
		return ret
	}
	return *o.EnglishName.Get()
}

// GetEnglishNameOk returns a tuple with the EnglishName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetEnglishNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnglishName.Get(), o.EnglishName.IsSet()
}

// HasEnglishName returns a boolean if a field has been set.
func (o *Channel) HasEnglishName() bool {
	if o != nil && o.EnglishName.IsSet() {
		return true
	}

	return false
}

// SetEnglishName gets a reference to the given NullableString and assigns it to the EnglishName field.
func (o *Channel) SetEnglishName(v string) {
	o.EnglishName.Set(&v)
}
// SetEnglishNameNil sets the value for EnglishName to be an explicit nil
func (o *Channel) SetEnglishNameNil() {
	o.EnglishName.Set(nil)
}

// UnsetEnglishName ensures that no value is present for EnglishName, not even an explicit nil
func (o *Channel) UnsetEnglishName() {
	o.EnglishName.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Channel) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Channel) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Channel) SetType(v string) {
	o.Type = &v
}

// GetOrg returns the Org field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetOrg() string {
	if o == nil || o.Org.Get() == nil {
		var ret string
		return ret
	}
	return *o.Org.Get()
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetOrgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Org.Get(), o.Org.IsSet()
}

// HasOrg returns a boolean if a field has been set.
func (o *Channel) HasOrg() bool {
	if o != nil && o.Org.IsSet() {
		return true
	}

	return false
}

// SetOrg gets a reference to the given NullableString and assigns it to the Org field.
func (o *Channel) SetOrg(v string) {
	o.Org.Set(&v)
}
// SetOrgNil sets the value for Org to be an explicit nil
func (o *Channel) SetOrgNil() {
	o.Org.Set(nil)
}

// UnsetOrg ensures that no value is present for Org, not even an explicit nil
func (o *Channel) UnsetOrg() {
	o.Org.Unset()
}

// GetSuborg returns the Suborg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetSuborg() string {
	if o == nil || o.Suborg.Get() == nil {
		var ret string
		return ret
	}
	return *o.Suborg.Get()
}

// GetSuborgOk returns a tuple with the Suborg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetSuborgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suborg.Get(), o.Suborg.IsSet()
}

// HasSuborg returns a boolean if a field has been set.
func (o *Channel) HasSuborg() bool {
	if o != nil && o.Suborg.IsSet() {
		return true
	}

	return false
}

// SetSuborg gets a reference to the given NullableString and assigns it to the Suborg field.
func (o *Channel) SetSuborg(v string) {
	o.Suborg.Set(&v)
}
// SetSuborgNil sets the value for Suborg to be an explicit nil
func (o *Channel) SetSuborgNil() {
	o.Suborg.Set(nil)
}

// UnsetSuborg ensures that no value is present for Suborg, not even an explicit nil
func (o *Channel) UnsetSuborg() {
	o.Suborg.Unset()
}

// GetPhoto returns the Photo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetPhoto() string {
	if o == nil || o.Photo.Get() == nil {
		var ret string
		return ret
	}
	return *o.Photo.Get()
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetPhotoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Photo.Get(), o.Photo.IsSet()
}

// HasPhoto returns a boolean if a field has been set.
func (o *Channel) HasPhoto() bool {
	if o != nil && o.Photo.IsSet() {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given NullableString and assigns it to the Photo field.
func (o *Channel) SetPhoto(v string) {
	o.Photo.Set(&v)
}
// SetPhotoNil sets the value for Photo to be an explicit nil
func (o *Channel) SetPhotoNil() {
	o.Photo.Set(nil)
}

// UnsetPhoto ensures that no value is present for Photo, not even an explicit nil
func (o *Channel) UnsetPhoto() {
	o.Photo.Unset()
}

// GetBanner returns the Banner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetBanner() string {
	if o == nil || o.Banner.Get() == nil {
		var ret string
		return ret
	}
	return *o.Banner.Get()
}

// GetBannerOk returns a tuple with the Banner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetBannerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Banner.Get(), o.Banner.IsSet()
}

// HasBanner returns a boolean if a field has been set.
func (o *Channel) HasBanner() bool {
	if o != nil && o.Banner.IsSet() {
		return true
	}

	return false
}

// SetBanner gets a reference to the given NullableString and assigns it to the Banner field.
func (o *Channel) SetBanner(v string) {
	o.Banner.Set(&v)
}
// SetBannerNil sets the value for Banner to be an explicit nil
func (o *Channel) SetBannerNil() {
	o.Banner.Set(nil)
}

// UnsetBanner ensures that no value is present for Banner, not even an explicit nil
func (o *Channel) UnsetBanner() {
	o.Banner.Unset()
}

// GetTwitter returns the Twitter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetTwitter() string {
	if o == nil || o.Twitter.Get() == nil {
		var ret string
		return ret
	}
	return *o.Twitter.Get()
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetTwitterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Twitter.Get(), o.Twitter.IsSet()
}

// HasTwitter returns a boolean if a field has been set.
func (o *Channel) HasTwitter() bool {
	if o != nil && o.Twitter.IsSet() {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given NullableString and assigns it to the Twitter field.
func (o *Channel) SetTwitter(v string) {
	o.Twitter.Set(&v)
}
// SetTwitterNil sets the value for Twitter to be an explicit nil
func (o *Channel) SetTwitterNil() {
	o.Twitter.Set(nil)
}

// UnsetTwitter ensures that no value is present for Twitter, not even an explicit nil
func (o *Channel) UnsetTwitter() {
	o.Twitter.Unset()
}

// GetVideoCount returns the VideoCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetVideoCount() string {
	if o == nil || o.VideoCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.VideoCount.Get()
}

// GetVideoCountOk returns a tuple with the VideoCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetVideoCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VideoCount.Get(), o.VideoCount.IsSet()
}

// HasVideoCount returns a boolean if a field has been set.
func (o *Channel) HasVideoCount() bool {
	if o != nil && o.VideoCount.IsSet() {
		return true
	}

	return false
}

// SetVideoCount gets a reference to the given NullableString and assigns it to the VideoCount field.
func (o *Channel) SetVideoCount(v string) {
	o.VideoCount.Set(&v)
}
// SetVideoCountNil sets the value for VideoCount to be an explicit nil
func (o *Channel) SetVideoCountNil() {
	o.VideoCount.Set(nil)
}

// UnsetVideoCount ensures that no value is present for VideoCount, not even an explicit nil
func (o *Channel) UnsetVideoCount() {
	o.VideoCount.Unset()
}

// GetSubscriberCount returns the SubscriberCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetSubscriberCount() string {
	if o == nil || o.SubscriberCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriberCount.Get()
}

// GetSubscriberCountOk returns a tuple with the SubscriberCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetSubscriberCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriberCount.Get(), o.SubscriberCount.IsSet()
}

// HasSubscriberCount returns a boolean if a field has been set.
func (o *Channel) HasSubscriberCount() bool {
	if o != nil && o.SubscriberCount.IsSet() {
		return true
	}

	return false
}

// SetSubscriberCount gets a reference to the given NullableString and assigns it to the SubscriberCount field.
func (o *Channel) SetSubscriberCount(v string) {
	o.SubscriberCount.Set(&v)
}
// SetSubscriberCountNil sets the value for SubscriberCount to be an explicit nil
func (o *Channel) SetSubscriberCountNil() {
	o.SubscriberCount.Set(nil)
}

// UnsetSubscriberCount ensures that no value is present for SubscriberCount, not even an explicit nil
func (o *Channel) UnsetSubscriberCount() {
	o.SubscriberCount.Unset()
}

// GetViewCount returns the ViewCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetViewCount() string {
	if o == nil || o.ViewCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewCount.Get()
}

// GetViewCountOk returns a tuple with the ViewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetViewCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ViewCount.Get(), o.ViewCount.IsSet()
}

// HasViewCount returns a boolean if a field has been set.
func (o *Channel) HasViewCount() bool {
	if o != nil && o.ViewCount.IsSet() {
		return true
	}

	return false
}

// SetViewCount gets a reference to the given NullableString and assigns it to the ViewCount field.
func (o *Channel) SetViewCount(v string) {
	o.ViewCount.Set(&v)
}
// SetViewCountNil sets the value for ViewCount to be an explicit nil
func (o *Channel) SetViewCountNil() {
	o.ViewCount.Set(nil)
}

// UnsetViewCount ensures that no value is present for ViewCount, not even an explicit nil
func (o *Channel) UnsetViewCount() {
	o.ViewCount.Unset()
}

// GetClipCount returns the ClipCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetClipCount() string {
	if o == nil || o.ClipCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClipCount.Get()
}

// GetClipCountOk returns a tuple with the ClipCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetClipCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClipCount.Get(), o.ClipCount.IsSet()
}

// HasClipCount returns a boolean if a field has been set.
func (o *Channel) HasClipCount() bool {
	if o != nil && o.ClipCount.IsSet() {
		return true
	}

	return false
}

// SetClipCount gets a reference to the given NullableString and assigns it to the ClipCount field.
func (o *Channel) SetClipCount(v string) {
	o.ClipCount.Set(&v)
}
// SetClipCountNil sets the value for ClipCount to be an explicit nil
func (o *Channel) SetClipCountNil() {
	o.ClipCount.Set(nil)
}

// UnsetClipCount ensures that no value is present for ClipCount, not even an explicit nil
func (o *Channel) UnsetClipCount() {
	o.ClipCount.Unset()
}

// GetLang returns the Lang field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Channel) GetLang() string {
	if o == nil || o.Lang.Get() == nil {
		var ret string
		return ret
	}
	return *o.Lang.Get()
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Channel) GetLangOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lang.Get(), o.Lang.IsSet()
}

// HasLang returns a boolean if a field has been set.
func (o *Channel) HasLang() bool {
	if o != nil && o.Lang.IsSet() {
		return true
	}

	return false
}

// SetLang gets a reference to the given NullableString and assigns it to the Lang field.
func (o *Channel) SetLang(v string) {
	o.Lang.Set(&v)
}
// SetLangNil sets the value for Lang to be an explicit nil
func (o *Channel) SetLangNil() {
	o.Lang.Set(nil)
}

// UnsetLang ensures that no value is present for Lang, not even an explicit nil
func (o *Channel) UnsetLang() {
	o.Lang.Unset()
}

// GetPublishedAt returns the PublishedAt field value if set, zero value otherwise.
func (o *Channel) GetPublishedAt() time.Time {
	if o == nil || o.PublishedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.PublishedAt
}

// GetPublishedAtOk returns a tuple with the PublishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetPublishedAtOk() (*time.Time, bool) {
	if o == nil || o.PublishedAt == nil {
		return nil, false
	}
	return o.PublishedAt, true
}

// HasPublishedAt returns a boolean if a field has been set.
func (o *Channel) HasPublishedAt() bool {
	if o != nil && o.PublishedAt != nil {
		return true
	}

	return false
}

// SetPublishedAt gets a reference to the given time.Time and assigns it to the PublishedAt field.
func (o *Channel) SetPublishedAt(v time.Time) {
	o.PublishedAt = &v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *Channel) GetInactive() bool {
	if o == nil || o.Inactive == nil {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetInactiveOk() (*bool, bool) {
	if o == nil || o.Inactive == nil {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *Channel) HasInactive() bool {
	if o != nil && o.Inactive != nil {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *Channel) SetInactive(v bool) {
	o.Inactive = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Channel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Channel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Channel) SetDescription(v string) {
	o.Description = &v
}

func (o Channel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.EnglishName.IsSet() {
		toSerialize["english_name"] = o.EnglishName.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Org.IsSet() {
		toSerialize["org"] = o.Org.Get()
	}
	if o.Suborg.IsSet() {
		toSerialize["suborg"] = o.Suborg.Get()
	}
	if o.Photo.IsSet() {
		toSerialize["photo"] = o.Photo.Get()
	}
	if o.Banner.IsSet() {
		toSerialize["banner"] = o.Banner.Get()
	}
	if o.Twitter.IsSet() {
		toSerialize["twitter"] = o.Twitter.Get()
	}
	if o.VideoCount.IsSet() {
		toSerialize["video_count"] = o.VideoCount.Get()
	}
	if o.SubscriberCount.IsSet() {
		toSerialize["subscriber_count"] = o.SubscriberCount.Get()
	}
	if o.ViewCount.IsSet() {
		toSerialize["view_count"] = o.ViewCount.Get()
	}
	if o.ClipCount.IsSet() {
		toSerialize["clip_count"] = o.ClipCount.Get()
	}
	if o.Lang.IsSet() {
		toSerialize["lang"] = o.Lang.Get()
	}
	if o.PublishedAt != nil {
		toSerialize["published_at"] = o.PublishedAt
	}
	if o.Inactive != nil {
		toSerialize["inactive"] = o.Inactive
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableChannel struct {
	value *Channel
	isSet bool
}

func (v NullableChannel) Get() *Channel {
	return v.value
}

func (v *NullableChannel) Set(val *Channel) {
	v.value = val
	v.isSet = true
}

func (v NullableChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannel(val *Channel) *NullableChannel {
	return &NullableChannel{value: val, isSet: true}
}

func (v NullableChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


