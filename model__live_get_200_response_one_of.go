/*
Holodex/HoloAPI V2

Holodex Public API. Successor to the HoloAPI v1

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package holodex

import (
	"encoding/json"
)

// LiveGet200ResponseOneOf struct for LiveGet200ResponseOneOf
type LiveGet200ResponseOneOf struct {
	Total *float32 `json:"total,omitempty"`
	Items []Video `json:"items,omitempty"`
}

// NewLiveGet200ResponseOneOf instantiates a new LiveGet200ResponseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveGet200ResponseOneOf() *LiveGet200ResponseOneOf {
	this := LiveGet200ResponseOneOf{}
	return &this
}

// NewLiveGet200ResponseOneOfWithDefaults instantiates a new LiveGet200ResponseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveGet200ResponseOneOfWithDefaults() *LiveGet200ResponseOneOf {
	this := LiveGet200ResponseOneOf{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *LiveGet200ResponseOneOf) GetTotal() float32 {
	if o == nil || o.Total == nil {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveGet200ResponseOneOf) GetTotalOk() (*float32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *LiveGet200ResponseOneOf) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *LiveGet200ResponseOneOf) SetTotal(v float32) {
	o.Total = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *LiveGet200ResponseOneOf) GetItems() []Video {
	if o == nil || o.Items == nil {
		var ret []Video
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveGet200ResponseOneOf) GetItemsOk() ([]Video, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *LiveGet200ResponseOneOf) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Video and assigns it to the Items field.
func (o *LiveGet200ResponseOneOf) SetItems(v []Video) {
	o.Items = v
}

func (o LiveGet200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableLiveGet200ResponseOneOf struct {
	value *LiveGet200ResponseOneOf
	isSet bool
}

func (v NullableLiveGet200ResponseOneOf) Get() *LiveGet200ResponseOneOf {
	return v.value
}

func (v *NullableLiveGet200ResponseOneOf) Set(val *LiveGet200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveGet200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveGet200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveGet200ResponseOneOf(val *LiveGet200ResponseOneOf) *NullableLiveGet200ResponseOneOf {
	return &NullableLiveGet200ResponseOneOf{value: val, isSet: true}
}

func (v NullableLiveGet200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveGet200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


